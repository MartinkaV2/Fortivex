// <auto-generated />
using System;
using FortivexAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FortivexAPI.Migrations
{
    [DbContext(typeof(FortivexContext))]
    [Migration("20251026045633_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FortivexAPI.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 16, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5544),
                            Email = "test@fortivex.com",
                            LastLogin = new DateTime(2025, 10, 26, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5547),
                            PasswordHash = "test123",
                            Username = "testplayer"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 6, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5551),
                            Email = "admin@fortivex.com",
                            LastLogin = new DateTime(2025, 10, 26, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5552),
                            PasswordHash = "admin123",
                            Username = "adminuser"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 21, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5555),
                            Email = "player2@fortivex.com",
                            LastLogin = new DateTime(2025, 10, 26, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5556),
                            PasswordHash = "pass123",
                            Username = "player2"
                        });
                });

            modelBuilder.Entity("FortivexAPI.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 2,
                            AssignedAt = new DateTime(2025, 10, 11, 5, 56, 32, 918, DateTimeKind.Local).AddTicks(5672),
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("FortivexAPI.Models.PlayerProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BestTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("PlayerProgress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            BestTime = 250
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 3,
                            BestTime = 180
                        });
                });

            modelBuilder.Entity("FortivexAPI.Models.PlayerStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("EnemiesKilled")
                        .HasColumnType("int");

                    b.Property<int>("TimePlayed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("PlayerStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            EnemiesKilled = 45,
                            TimePlayed = 3600
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 3,
                            EnemiesKilled = 62,
                            TimePlayed = 5400
                        });
                });

            modelBuilder.Entity("FortivexAPI.Models.Admin", b =>
                {
                    b.HasOne("FortivexAPI.Models.Account", "Account")
                        .WithOne("Admin")
                        .HasForeignKey("FortivexAPI.Models.Admin", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FortivexAPI.Models.PlayerProgress", b =>
                {
                    b.HasOne("FortivexAPI.Models.Account", "Account")
                        .WithOne("PlayerProgress")
                        .HasForeignKey("FortivexAPI.Models.PlayerProgress", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FortivexAPI.Models.PlayerStat", b =>
                {
                    b.HasOne("FortivexAPI.Models.Account", "Account")
                        .WithOne("PlayerStat")
                        .HasForeignKey("FortivexAPI.Models.PlayerStat", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FortivexAPI.Models.Account", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("PlayerProgress");

                    b.Navigation("PlayerStat");
                });
#pragma warning restore 612, 618
        }
    }
}
